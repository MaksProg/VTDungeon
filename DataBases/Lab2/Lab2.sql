--task 1
--Сделать запрос для получения атрибутов из указанных таблиц, применив фильтры по указанным условиям:
--Таблицы: Н_ЛЮДИ, Н_СЕССИЯ.
--Вывести атрибуты: Н_ЛЮДИ.ИМЯ, Н_СЕССИЯ.УЧГОД.
--Фильтры (AND):
--a) Н_ЛЮДИ.ФАМИЛИЯ > Ёлкин.
--b) Н_СЕССИЯ.ИД < 14.
--c) Н_СЕССИЯ.ИД = 32199.
--Вид соединения: RIGHT JOIN.
--task 1
SELECT Н_ЛЮДИ.ИМЯ, Н_СЕССИЯ.УЧГОД
FROM Н_ЛЮДИ
		RIGHT JOIN Н_СЕССИЯ ON Н_ЛЮДИ.ИД = Н_СЕССИЯ.ЧЛВК_ИД
WHERE 
	Н_ЛЮДИ.ФАМИЛИЯ > 'Ёлкин'
	AND Н_СЕССИЯ.ИД < 14
	AND Н_СЕССИЯ.ИД = 32199;
	
--task 2
--Сделать запрос для получения атрибутов из указанных таблиц, применив фильтры по указанным условиям:
--Таблицы: Н_ЛЮДИ, Н_ВЕДОМОСТИ, Н_СЕССИЯ.
--Вывести атрибуты: Н_ЛЮДИ.ИМЯ, Н_ВЕДОМОСТИ.ЧЛВК_ИД, Н_СЕССИЯ.УЧГОД.
--Фильтры (AND):
--a) Н_ЛЮДИ.ИД > 152862.
--b) Н_ВЕДОМОСТИ.ДАТА < 2010-06-18.
--Вид соединения: LEFT JOIN.
--task 2

SELECT DISTINCT
    "Н_ЛЮДИ"."ИМЯ", 
    "Н_ВЕДОМОСТИ"."ЧЛВК_ИД", 
    "Н_СЕССИЯ"."УЧГОД"
FROM "Н_ЛЮДИ"
LEFT JOIN "Н_ВЕДОМОСТИ" ON "Н_ЛЮДИ"."ИД" = "Н_ВЕДОМОСТИ"."ЧЛВК_ИД"
LEFT JOIN "Н_СЕССИЯ" ON "Н_ЛЮДИ"."ИД" = "Н_СЕССИЯ"."ЧЛВК_ИД"
WHERE "Н_ЛЮДИ"."ИД" > 152862
AND "Н_ВЕДОМОСТИ"."ДАТА" < '2010-06-18';

--task 3
--Вывести число студентов вечерней формы обучения, которые младше 20 лет.
--Ответ должен содержать только одно число.
--task 3

SELECT COUNT(*)
FROM "Н_УЧЕНИКИ"
JOIN "Н_ЛЮДИ" ON "Н_ЛЮДИ.ИД" = "Н_УЧЕНИКИ.ЧЛВК_ИД"
JOIN "Н_ПЛАНЫ" ON "Н_УЧЕНИКИ.ПЛАН_ИД" = "Н_ПЛАНЫ.ИД"
JOIN "Н_ФОРМЫ_ОБУЧЕНИЯ" ON "Н_ПЛАНЫ.ФО_ИД" = "Н_ФОРМЫ_ОБУЧЕНИЯ.ИД"
WHERE  "Н_ФОРМЫ_ОБУЧЕНИЯ"."ИМЯ_В_ИМИН_ПАДЕЖЕ" = 'вечерняя'
AND EXTRACT(YEAR FROM AGE("Н_ЛЮДИ"."ДАТА_РОЖДЕНИЯ")) < 20;

--task 4
--В таблице Н_ГРУППЫ_ПЛАНОВ найти номера планов, по которым обучается (обучалось) менее 2 групп на кафедре вычислительной техники.
--Для реализации использовать соединение таблиц.
--task 4
SELECT "Н_ГРУППЫ_ПЛАНОВ"."ПЛАН_ИД"
FROM "Н_ГРУППЫ_ПЛАНОВ"
WHERE "ПЛАН_ИД" IN (SELECT "Н_ПЛАНЫ"."ИД"
      FROM "Н_ПЛАНЫ"
      JOIN "Н_ОТДЕЛЫ" ON "Н_ОТДЕЛЫ"."ИД" = "Н_ПЛАНЫ"."ОТД_ИД"
      WHERE "Н_ОТДЕЛЫ"."КОРОТКОЕ_ИМЯ" = 'ВТ')
GROUP BY "Н_ГРУППЫ_ПЛАНОВ"."ПЛАН_ИД"
HAVING COUNT(*) < 2;

--task 5
--Выведите таблицу со средними оценками студентов группы 4100 
--(Номер, ФИО, Ср_оценка), у которых средняя оценка
 --равна минимальной оценк(е|и) в группе 1100.
--task 5
SELECT 
    "Н_УЧЕНИКИ"."ИД",
    "Н_ЛЮДИ"."ФАМИЛИЯ",
    "Н_ЛЮДИ"."ИМЯ",
    "Н_ЛЮДИ"."ОТЧЕСТВО",
    ROUND(AVG(CAST("Н_ВЕДОМОСТИ"."ОЦЕНКА" AS NUMERIC)), 2) AS "СР_ОЦЕНКА"
FROM "Н_УЧЕНИКИ"
	JOIN "Н_ЛЮДИ" ON "Н_УЧЕНИКИ"."ЧЛВК_ИД" = "Н_ЛЮДИ"."ИД"
	LEFT JOIN "Н_ВЕДОМОСТИ" ON "Н_УЧЕНИКИ"."ЧЛВК_ИД" = "Н_ВЕДОМОСТИ"."ЧЛВК_ИД"
	WHERE "Н_УЧЕНИКИ"."ГРУППА" = '4100'
		AND "Н_ВЕДОМОСТИ"."ОЦЕНКА" ~ '^[0-5]$'
	GROUP BY "Н_УЧЕНИКИ"."ИД", "Н_ЛЮДИ"."ФАМИЛИЯ", "Н_ЛЮДИ"."ИМЯ", "Н_ЛЮДИ"."ОТЧЕСТВО"
	HAVING 
		ROUND(AVG(CAST("Н_ВЕДОМОСТИ"."ОЦЕНКА" AS NUMERIC)), 2) = (
			SELECT MIN(CAST("Н_ВЕДОМОСТИ"."ОЦЕНКА" AS NUMERIC))
			FROM "Н_УЧЕНИКИ"
			JOIN "Н_ВЕДОМОСТИ" ON "Н_УЧЕНИКИ"."ЧЛВК_ИД" = "Н_ВЕДОМОСТИ"."ЧЛВК_ИД"
			WHERE "Н_УЧЕНИКИ"."ГРУППА" = '1100'
			AND "Н_ВЕДОМОСТИ"."ОЦЕНКА" ~ '^[0-5]$'
    );


--task 6
--Получить список студентов,
--зачисленных после первого сентября 2012 года
--на первый курс заочной формы обучения (специальность: Программная инженерия).
--В результат включить:
--номер группы;
--номер, фамилию, имя и отчество студента;
--номер и состояние пункта приказа;
--Для реализации использовать подзапрос с EXISTS.
--task 6

SELECT "ВНЕШНИЙ_ЗАПРОС"."ГРУППА",
       "Н_ЛЮДИ"."ФАМИЛИЯ",
       "Н_ЛЮДИ"."ИМЯ",
       "Н_ЛЮДИ"."ОТЧЕСТВО",
       "ВНЕШНИЙ_ЗАПРОС"."П_ПРКОК_ИД"
FROM "Н_УЧЕНИКИ" "ВНЕШНИЙ_ЗАПРОС"
JOIN "Н_ЛЮДИ" ON "ВНЕШНИЙ_ЗАПРОС"."ЧЛВК_ИД" = "Н_ЛЮДИ"."ИД"
JOIN "Н_ПЛАНЫ" ON "ВНЕШНИЙ_ЗАПРОС"."ПЛАН_ИД" = "Н_ПЛАНЫ"."ИД"
JOIN "Н_ФОРМЫ_ОБУЧЕНИЯ" ON "Н_ПЛАНЫ"."ФО_ИД" = "Н_ФОРМЫ_ОБУЧЕНИЯ"."ИД"
JOIN "Н_НАПРАВЛЕНИЯ_СПЕЦИАЛ" ON "Н_ПЛАНЫ"."НАПС_ИД" = "Н_НАПРАВЛЕНИЯ_СПЕЦИАЛ"."ИД"
JOIN "Н_НАПР_СПЕЦ" ON "Н_НАПРАВЛЕНИЯ_СПЕЦИАЛ"."ИД" = "Н_НАПР_СПЕЦ"."ИД"
WHERE "Н_ФОРМЫ_ОБУЧЕНИЯ"."ИМЯ_В_ИМИН_ПАДЕЖЕ" = 'заочная'
  AND "Н_НАПР_СПЕЦ"."НАИМЕНОВАНИЕ" = 'Программная инженерия'
  AND EXISTS (
	SELECT *
      FROM "Н_УЧЕНИКИ" "ВНУТРЕННИЙ_ЗАПРОС"
      WHERE "ВНУТРЕННИЙ_ЗАПРОС"."ПРИЗНАК" = 'обучен'
        AND "ВНУТРЕННИЙ_ЗАПРОС"."СОСТОЯНИЕ" = 'утвержден'
        AND "ВНУТРЕННИЙ_ЗАПРОС"."ИД" = "ВНЕШНИЙ_ЗАПРОС"."ИД"
        AND CAST("ВНУТРЕННИЙ_ЗАПРОС"."КОГДА_СОЗДАЛ" AS DATE) > '2012-09-01'
  );

--task 7
--Сформировать запрос для получения числа в СПбГУ ИТМО отличников.
--task 7

--SELECT COUNT(*) AS "КОЛИЧЕСТВО_ОТЛИЧНИКОВ"
--FROM (SELECT "Н_УЧЕНИКИ"."ИД"
--      FROM "Н_УЧЕНИКИ"
--               JOIN "Н_ПЛАНЫ" ON "Н_УЧЕНИКИ"."ПЛАН_ИД" = "Н_ПЛАНЫ"."ИД"
--               JOIN "Н_ОТДЕЛЫ" ON "Н_ОТДЕЛЫ"."ИД" = "Н_ПЛАНЫ"."ОТД_ИД"
--               JOIN "Н_ВЕДОМОСТИ" ON "Н_ВЕДОМОСТИ"."ЧЛВК_ИД" = "Н_УЧЕНИКИ"."ЧЛВК_ИД"
--      WHERE "Н_ОТДЕЛЫ"."КОРОТКОЕ_ИМЯ" = 'СПбГУИТМО'
--      GROUP BY "Н_УЧЕНИКИ"."ИД"
--      HAVING AVG(CAST("Н_ВЕДОМОСТИ"."ОЦЕНКА" AS INT))
--             FILTER (WHERE "Н_ВЕДОМОСТИ"."ОЦЕНКА" ~ '^[2-5]$') BETWEEN 4.5 AND 5.0) "ИДОТЛИЧНИКОВ";

SELECT COUNT(*) AS "КОЛИЧЕСТВО_ОТЛИЧНИКОВ"
FROM (SELECT "Н_УЧЕНИКИ"."ИД"
      FROM "Н_УЧЕНИКИ"
               JOIN "Н_ВЕДОМОСТИ" ON "Н_ВЕДОМОСТИ"."ЧЛВК_ИД" = "Н_УЧЕНИКИ"."ЧЛВК_ИД"
      GROUP BY "Н_УЧЕНИКИ"."ИД"
      HAVING AVG(CAST("Н_ВЕДОМОСТИ"."ОЦЕНКА" AS INT))
             FILTER (WHERE "Н_ВЕДОМОСТИ"."ОЦЕНКА" ~ '^[2-5]$') BETWEEN 4.5 AND 5.0) "ИДОТЛИЧНИКОВ";